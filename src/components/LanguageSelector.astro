---
import Chevron from "./icons/Chevron.astro";
const chevronSize = { width: 25, height: 25 };
const chevronTransformation = "transform: rotate(-90deg)";
import { getLangFromUrl } from "@/i18n/utils";

import { languages } from "@/i18n/ui";
const lang = getLangFromUrl(Astro.url);
const currentLocale = languages[lang];
const otherLanguages = Object.values(languages).filter(
    (l) => l.code != currentLocale.code,
);
---

<div class="header__language">
    <currentLocale.flag />
    <p class="language__text">{currentLocale.code}</p>
    <Chevron
        width={chevronSize.width}
        height={chevronSize.height}
        transformation={chevronTransformation}
    />
    <div class="dropdown__language hide">
        <ul class="dropdown__list">
            {
                otherLanguages.map((l) => {
                    return (
                        <a
                            href={`/${l.code != languages['es'].code ? l.code.toLowerCase() : ""}`}
                        >
                            <li>
                                <l.flag />
                                <p class="language__text">{l.code}</p>
                            </li>
                        </a>
                    );
                })
            }
        </ul>
    </div>
</div>

<style>
    .header__language {
        position: relative;
        background-color: var(--bg-language);
        border-radius: 20px;
        padding: 5px 10px;
        display: flex;
        align-items: center;
        gap: 10px;
        cursor: pointer;
    }
    .dropdown__language {
        position: absolute;
        background-color: var(--bg-language);
        display: flex;
        flex-direction: column;
        justify-content: center;
        left: 0;
        top: 100%;
        width: 100%;
        border-radius: 0 0 20px 20px;
    }

    .dropdown__list li {
        display: flex;
        align-items: center;
        justify-content: space-evenly;
        padding: 10px 0;
    }

    .dropdown__list li:hover {
        background-color: var(--bg-link-30);
        border-radius: 0 0 20px 20px;
    }
    .language__text {
        user-select: none;
        color: var(--color-link);
    }
    @media screen and (max-width: 900px) {
        .language__text {
            display: none;
        }
        .header__language {
            padding: 5px;
            gap: 0;
        }
    }
</style>
<script>
    const selector = document.querySelector(".header__language") as HTMLElement;

    const dropdown = document.querySelector(
        ".dropdown__language",
    ) as HTMLElement;
    selector?.addEventListener("click", toggleVisibility);

    function closeDropdown(event: any): void {
        if (
            dropdown?.classList.contains("hide") ||
            event.target.matches(".header__language")
        )
            return;
        selector.style.borderRadius = "20px";
        dropdown?.classList.add("hide");
        window.removeEventListener("click", closeDropdown);
    }
    function toggleVisibility(event: any): void {
        event.stopPropagation();
        if (dropdown?.classList.contains("hide")) {
            (event.currentTarget as HTMLElement).style.borderRadius =
                "20px 20px 0 0";
            window.addEventListener("click", closeDropdown);
        } else {
            (event.currentTarget as HTMLElement).style.borderRadius = "20px";
        }
        dropdown?.classList.toggle("hide");
    }
</script>
