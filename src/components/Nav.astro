---
import MenuIcon from "@/components/icons/Menu.astro";
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { currentLocale } = Astro;
import { getI18N } from "@/i18n";
const i18n = getI18N({ currentLocale });
---

<nav class="header__nav">
    <a href="#experience" class="nav__link active" data-anchor>{t('nav.experience')}</a>
    <a href="#projects" class="nav__link" data-anchor>{t('nav.projects')}</a>
    <a href="#tech" class="nav__link" data-anchor>{t('nav.tech')}</a>
    <a href="#about" class="nav__link" data-anchor>{t('nav.about')}</a>
    <a href={i18n.resume_link} download={i18n.download_name} class="nav__link cv">{t('nav.resume')}</a>
    <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="icon icon-tabler icons-tabler-outline icon-tabler-menu-2 nav__icon"
    >
        <MenuIcon />
    </svg>
    <ul class="nav__dropdown hide">
        <a href="#experience" data-anchor><li class="dropdown__link active">{t('nav.experience')}</li></a>
        <a href="#projects" data-anchor><li class="dropdown__link">{t('nav.projects')}</li></a>
        <a href="#tech" data-anchor><li class="dropdown__link">{t('nav.tech')}</li></a>
        <a href="#about" data-anchor><li class="dropdown__link">{t('nav.about')}</li></a>
        <a href={i18n.resume_link} download={i18n.download_name}><li class="dropdown__link cv">{t('nav.resume')}</li></a>
    </ul>
</nav>
<style>
    .nav__dropdown {
        position: absolute;
        width: 100%;
        background-color: var(--bg-language);
        top: 100%;
        left: 0;
        max-height: 0;
        display: none;
        border-radius: 0 0 20px 20px;
        overflow: hidden;
        transition: all 300ms ease;
    }
    .dropdown__link {
        padding: 1rem 0;
        cursor: pointer;
    }
    .header__nav {
        position: relative;
        background-color: var(--bg-pill-90);
        border-radius: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 10px 20px;
        gap: 2rem;
        min-width: 150px;
    }
    .nav__link,
    .dropdown__link {
        color: var(--color-link);
        transition: color 200ms ease;
        user-select: none;
    }
    .active,
    .nav__link:hover, .dropdown__link:hover {
        color: var(--color-important);
    }
    .cv {
        color: var(--color-highlight);
        font-weight: 500;
    }
    .nav__icon {
        display: none;
    }
    svg {
        stroke: var(--color-text);
        fill: var(--color-text);
    }
    @media screen and (max-width: 900px) {
        .header__nav {
            gap: 1.5rem;
        }
    }

    @media screen and (max-width: 767px) {
        .nav__dropdown {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;

        }
        .nav__link:not(.active) {
            display: none;
        }
        .nav__icon {
            display: block;
            cursor: pointer;
        }

    }
    @media screen and (max-width: 500px) {
        .header__nav{
            gap: .25rem;
            padding: 10px;
            justify-content:space-around;
        }

    }

</style>
<script>
    const icon = document.querySelector(".nav__icon") as HTMLElement;
    const nav = document.querySelector(".header__nav") as HTMLElement;
    const dropdown = document.querySelector(".nav__dropdown") as HTMLElement;

    icon?.addEventListener("click", toggleVisibility);

    function closeDropdown(event: any): void {
        const activeLink = document.querySelector(".nav__link.active") as HTMLElement;

        if (
            dropdown?.classList.contains("hide") ||
            event.target.matches(".header__nav")
        )
            return;
        nav.style.borderRadius = "20px";
        dropdown?.classList.add("hide");
        activeLink.style.visibility = "visible";

        window.removeEventListener("click", closeDropdown);
    }
    function toggleVisibility(event: any): void {
        const activeLink = document.querySelector(".nav__link.active") as HTMLElement;

    event.stopPropagation();
    if (dropdown?.classList.contains("hide")) {
        dropdown?.classList.remove("hide");

        nav.style.borderRadius = "20px 20px 0 0";
        activeLink.style.visibility = "hidden";
        window.addEventListener("click", closeDropdown);
        setTimeout(() => {
            dropdown.style.maxHeight = "400px";
        }, 1);
    } else {
        activeLink.style.visibility = "visible";
        dropdown.style.maxHeight = "0px";
        
        setTimeout(() => {
            dropdown?.classList.add("hide")
            nav.style.borderRadius = "20px";
        },300)

    }
}

</script>
